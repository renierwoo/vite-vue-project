
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    map $http_user_agent $ignore_user_agent {
        default                  1;
        "~^ELB-HealthChecker/.*" 0;
        "~^kube-probe/.*"        0;
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    # tcp_nopush     on;

    keepalive_timeout  65;

    # gzip  on;

    server {
        listen       80;
        server_name  localhost;

        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/xml application/javascript text/css;

        # access_log  /var/log/nginx/host.access.log  main;

        # location / {
        #     root   /usr/share/nginx/html;
        #     index  index.html index.htm;
        # }

        # error_page  404              /404.html;

        # normal routes
        # serve given url and default to index.html if not found
        # e.g. /, /user and /foo/bar will return index.html
        location / {
            root /usr/share/nginx/html;
            index  index.html index.htm;
            # add_header Cache-Control "no-store";
            # try_files $uri $uri/index.html /index.html;
            access_log /var/log/nginx/access.log  main if=$ignore_user_agent;
        }

        # files
        # for all routes matching a dot, check for files and return 404 if not found
        # e.g. /file.js returns a 404 if not found
        # location ~ \.(?!html) {
        #     add_header Cache-Control "public, max-age=2678400";
        #     try_files $uri =404;
        #     access_log /var/log/nginx/access.log  main if=$ignore_user_agent;
        # }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        # location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        # }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        # location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        # }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        # location ~ /\.ht {
        #    deny  all;
        # }
    }

    include /etc/nginx/conf.d/*.conf;
}
